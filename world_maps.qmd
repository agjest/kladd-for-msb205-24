---
title: "World maps"
format: html
editor: visual
---

```{r}
#| label: setup
library(tidyverse)
library(sf)
library(rnaturalearth)
library(lwgeom)
library(tmap)
library(tmaptools)
```

```{r}
# read in world map from rnatrualearth
# The option returnclass = "sf" gives us an sf object
world_ne <- ne_countries(
  scale = "medium", 
  returnclass = "sf"
  )
```

```{r}
st_axis_order(authority_compliant = TRUE)
world_ne <- ne_countries(scale = "medium", returnclass = "sf")  %>% 
  select(continent) 
```

```{r}
crs_wintri <- "+proj=wintri +datum=WGS84 +no_defs +over"
world_wintri <- world_ne %>% 
#  st_transform(4326) %>%
#  st_transform(pipeline ="+proj=pipeline +step +proj=axisswap +order=2,1") %>% 
  st_transform_proj(crs = crs_wintri)
```

```{r}
world_wintri |> 
  plot()
```

```{r}
grat_wintri <- 
  st_graticule(lat = c(-89.9, seq(-80, 80, 20), 89.9)) %>%
  st_transform_proj(crs = crs_wintri) 
```

```{r}
grat_wintri |> 
  plot()
```

```{r}
grat_wintri %>% 
  ggplot() + 
  geom_sf(
    color = "gray30", 
    #size = 0.25/.pt
    linewidth = 0.25
    ) + 
  coord_sf(datum = NULL)
```

```{r}
  ggplot() + 
  geom_sf(
    data = world_wintri, 
    color = "black", 
    linewidth = 0.25
    ) +
  geom_sf(
    data = grat_wintri, 
    color = "gray30", 
    linewidth = 0.25
    ) + 

  coord_sf(datum = NULL)
```

```{r}
# vectors of latitudes and longitudes 
# that go once around the 
# globe in 1-degree steps
lats <- c(90:-90, -90:90, 90)
longs <- c(
  rep(c(180, -180), each = 181), 
  180
  )
```

```{r}
# turn into correctly projected sf collection
wintri_outline <- 
  list(cbind(longs, lats)) %>%
  st_polygon() %>%
  st_sfc( # create sf geometry list column
    crs = "+proj=longlat +ellps=WGS84 
    +datum=WGS84 +no_defs"
  ) %>% 
  st_sf() %>%
  # transform to Winkel tripel
  st_transform_proj(crs = crs_wintri) 
```

```{r}
ggplot() + 
  geom_sf(data = wintri_outline, 
          fill = "#56B4E950", 
          color = "grey30", 
          linewidth = 0.5
          ) +
  coord_sf(datum = NULL)
```

```{r}
ggplot() + 
  geom_sf(data = wintri_outline, 
          fill = "#56B4E950", 
          color = "grey30", 
          linewidth = 0.5) +
  geom_sf(data = world_wintri, 
          aes(fill = continent), 
          color = "black", 
          linewidth = 0.5) +
  geom_sf(data = grat_wintri, 
          color = "gray30", 
          linewidth = 0.25) +
  coord_sf(datum = NULL)
```
```{r}
Mirrors <- getCRANmirrors(all = FALSE, local.only = FALSE) %>% 
  as_tibble() %>% 
  filter(!str_detect(City, pattern = "0-Cloud.*")) %>%
  pull(City) %>% 
  str_conv("UTF-8") %>% 
  geocode_OSM(as.sf = TRUE, geometry = 'point') %>% 
  st_transform_proj(crs = crs_wintri) %>%
  transmute(city = query) %>% 
  group_by(city) %>% 
  summarise(mirrors = as.character(n())) %>% 
  mutate(
    mirrors = factor(mirrors, levels = c("1", "2", "3"))
  ) 
```

